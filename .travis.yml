---
language: python
python: "2.7"

sudo: required

env:
  - distribution: centos
    version: 6.8
    init: /sbin/init
    run_opts: ''

# Install ansible
services:
  - docker

before_install:
  - echo 'DOCKER_OPTS="-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock -s devicemapper"' | sudo tee /etc/default/docker > /dev/null
  - sudo service docker restart
  - sleep 5
  - sudo docker pull ${distribution}:${distribution}${version}
  - sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests
before_script:
  # Create container_id
  - container_id=$(mktemp)
  # Run container in detached mode
  - sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/salandur.php-apache:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"

script:
  # Basic role syntax check
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/salandur.php-apache/tests/test.yml --syntax-check

  # Run the role for the first time
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/salandur.php-apache/tests/test.yml

  # Second run Idempotence test
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/salandur.php-apache/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Check installations
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm test /usr/bin/php

after_script:
  # Clean up
  - sudo docker stop "$(cat ${container_id})"
  - sudo docker rm -v $(cat ${container_id})

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/